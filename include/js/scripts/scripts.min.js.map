{"version":3,"sources":["aa-models/singleAnimalModel.js","aa-models/singleCreatorModel.js","xx-collections/allAnimals.js","xx-collections/allCreators.js","bb-views/allAnimalsView.js","bb-views/allCreatorsView.js","bb-views/singleAnimalView.js","bb-views/singleCreatorView.js","yy-routes/router.js","zz-main/main.js"],"names":["console","log","app","singleAnimal","Backbone","Model","extend","defaults","color","img","singleCreator","urlRoot","AnimalsCollection","Collection","model","CreatorsCollection","allAnimalsView","View","tagName","render","this","collection","each","addAnimal","animal","animalView","singleAnimalView","$el","append","el","allCreatorsView","addCreator","creator","creatorView","singleCreatorView","className","template","_","$","html","animalTemplate","toJSON","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","creatorTemplate","attributes","Router","routes","","wolf","owl","panda","noCopy","wolfMessage","owlMessage","pandaMessage","name","price","link","id","fetch","creatorGroup","animalRouter","history","start"],"mappings":"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","file":"scripts.min.js","sourcesContent":["console.log(\"singleAnimalModel\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleAnimal = Backbone.Model.extend({\n\n//Chaque instance de modèles auront leurs propres propriétés\n  defaults: {\n    color: \"pink\",\n    img: \"images/placeholder.jpg\"\n  }\n\n  /*\n  initialize: function() {\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\n  \n    // Cut and paste this inside our initialize method\n    //Cela permet d'écouter les changements du modèle ?\n    // Modèle : les fleurs\n    this.on('change', function(){\n      console.log(\"Something in our model has changed\");\n    });\n\n    // Cut and paste this inside our initialize method\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\n    });\n\n  }*/\n\n});\n\n","console.log(\"singleCreator\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleCreator = Backbone.Model.extend({\n\n  urlRoot: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/creators'\n\n});\n\n","console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.AnimalsCollection = Backbone.Collection.extend({\n\n  model: app.singleAnimal\n\n});\n","console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.CreatorsCollection = Backbone.Collection.extend({\n\n  model: app.singleCreator\n\n});\n","console.log(\"allAnimalsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allAnimalsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addAnimal, this);\n        return this;\n  },\n\n addAnimal: function(animal) {\n        var animalView = new app.singleAnimalView ({ model: animal });\n        this.$el.append(animalView.render().el);\n }\n\n});","console.log(\"allCreatorsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allCreatorsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addCreator, this);\n        return this;\n  },\n\n addCreator: function(creator) {\n        var creatorView = new app.singleCreatorView ({ model: creator });\n        this.$el.append(creatorView.render().el);\n }\n\n});","console.log(\"singleAnimalView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for a single model view, which is one flower\napp.singleAnimalView = Backbone.View.extend({\n\n//tagname définit le nom de la balise HTML dans lequelles les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbonne définira par défaut la balise div\n  tagName: \"article\",\n  className: \"flowerListItem\",\n\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n  template: _.template( $(\"#flowerElement\").html() ),\n\n  //render construit les élémnts html\n  //Elle récupère les données crées précedemment\n  //$el ?\n  render: function() {\n    var animalTemplate = this.template(this.model.toJSON());\n    this.$el.html(animalTemplate);\n    return this;\n  },\n\n  //Evènements spécifiques à Backbone\n  events: {\n    'mouseover': 'addBgColor',\n    'mouseout': 'removeBgColor'\n  },\n\n  //Ajout au template, à la balise #allFlower est modifiée ?\n  //balise article (référence)\n  addBgColor: function() {\n    this.$el.addClass(\"bgColorImage\");\n  },\n\n  removeBgColor: function() {\n    this.$el.removeClass(\"bgColorImage\");\n  }\n\n});","console.log(\"singleCreatorView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.singleCreatorView = Backbone.View.extend({\n\n  tagName: \"article\",\n  className: \"flowerListItem\",\n\n  template: _.template( $(\"#flowerElement\").html() ),\n\n    /*initialize: function() {\n\t\t\tthis.template = _.template($('#creatorsTemplate').html());\n\t\t\tthis.listenTo(this.model, 'change', this.render);\n\t},*/\n\n  render: function(){\n\t\t\tvar creatorTemplate = this.$el.html(this.template(this.model.attributes));\n\t\t\tthis.$el.html(creatorTemplate);\n    \t\treturn this;\n\t},\n\n\n});","console.log(\"router\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n//Création d'un routeur\n//Sur le modèle clé / valeur\n//La route est sur la gauche\napp.Router = Backbone.Router.extend({\n\n\troutes :{\n\t  //Définit une route pour index.html\n\t  //La méthode noCopy sera appelée\n\t  \"\": \"noCopy\",\n\t  //Les méthodes appelées pour :\n\t  //#heirloomRose, #rainbowRose, #redRose\n\t  \"wolf\" : \"wolfMessage\",\n\t  \"owl\": \"owlMessage\",\n\t  \"panda\" : \"pandaMessage\"\n\t},\n\n\tnoCopy: function() {\n  \t  $(\"#copy\").html(\"\");\n\t},\n\n\twolfMessage: function() {\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\n\t},\n\n\towlMessage: function() {\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\n\t},\n\n\tpandaMessage: function() {\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\n\t}\n\n});","console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\nvar wolf = new app.singleAnimal({\n  name: \"Polygon Wolf\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/wolf.svg\",\n  link: \"wolf\"\n});\n\nvar owl = new app.singleAnimal({\n  name: \"Polygon Owl\",\n  price: 29.95,\n  color: \"orange\",\n  img: \"images/owl.svg\",\n  link: \"owl\"\n});\n\nvar panda = new app.singleAnimal({\n  name: \"Polygon Panda\",\n  price: 19.95,\n  img: \"images/panda.svg\",\n  link: \"panda\"\n});\n/*\nvar animalGroup = new app.AnimalsCollection([\n  wolf, owl, panda\n]);\n\nvar animalGroupView = new app.allAnimalsView({ collection: animalGroup});\n\n$(\"#allFlowers\").html(animalGroupView.render().el);*/\n\nvar creator = new app.singleCreator({id:1});\ncreator.fetch();\n\nvar creatorGroup = new app.CreatorsCollection();\n//creatorsGroup.fetch();\n\nvar creatorView = new app.singleCreatorView({ model: creator});\n\n$(\"#allFlowers\").html(creatorView.render().el);\n\n/*\nvar hello = new creatorsView({\n      el: $('#creatorsTemplate').first(),\n      model: creatorsModel\n    });*/\n\n//Création d'une nouvelle instance de router \n//nommée flowerRouter\nvar animalRouter = new app.Router();\n\n//\nBackbone.history.start();\n\n\n/*flowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());*/\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}