{"version":3,"sources":["aa-models/singleAnimalModel.js","aa-models/singleCreatorModel.js","bb-views/allAnimalsView.js","bb-views/allCreatorsView.js","bb-views/singleAnimalView.js","bb-views/singleCreatorView.js","xx-collections/allAnimals.js","xx-collections/allCreators.js","yy-routes/router.js","zz-main/main.js"],"names":["console","log","app","singleAnimal","Backbone","Model","extend","defaults","color","img","singleCreator","urlRoot","allAnimalsView","View","tagName","render","this","collection","each","addAnimal","animal","animalView","singleAnimalView","model","$el","append","el","allCreatorsView","addCreator","creator","creatorView","singleCreatorView","className","template","_","$","html","animalTemplate","toJSON","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","creators","creatorTemplate","attributes","AnimalsCollection","Collection","CreatorsCollection","Router","routes","","wolf","owl","panda","noCopy","wolfMessage","owlMessage","pandaMessage","name","price","link","id","fetch","creatorGroup","creatorGroupView","animalRouter","history","start"],"mappings":"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","file":"scripts.min.js","sourcesContent":["console.log(\"singleAnimalModel\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleAnimal = Backbone.Model.extend({\n\n//Chaque instance de modèles auront leurs propres propriétés\n  defaults: {\n    color: \"pink\",\n    img: \"images/placeholder.jpg\"\n  }\n\n  /*\n  initialize: function() {\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\n  \n    // Cut and paste this inside our initialize method\n    //Cela permet d'écouter les changements du modèle ?\n    // Modèle : les fleurs\n    this.on('change', function(){\n      console.log(\"Something in our model has changed\");\n    });\n\n    // Cut and paste this inside our initialize method\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\n    });\n\n  }*/\n\n});\n\n","console.log(\"singleCreator\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleCreator = Backbone.Model.extend({\n\n  urlRoot: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/creators'\n\n});\n\n","console.log(\"allAnimalsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allAnimalsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addAnimal, this);\n        return this;\n  },\n\n addAnimal: function(animal) {\n        var animalView = new app.singleAnimalView ({ model: animal });\n        this.$el.append(animalView.render().el);\n }\n\n});","console.log(\"allCreatorsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allCreatorsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addCreator, this);\n        return this;\n  },\n\n addCreator: function(creator) {\n        var creatorView = new app.singleCreatorView ({ model: creator });\n        this.$el.append(creatorView.render().el);\n }\n\n});","console.log(\"singleAnimalView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for a single model view, which is one flower\napp.singleAnimalView = Backbone.View.extend({\n\n//tagname définit le nom de la balise HTML dans lequelles les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbonne définira par défaut la balise div\n  tagName: \"article\",\n  className: \"flowerListItem\",\n\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n  template: _.template( $(\"#flowerElement\").html() ),\n\n  //render construit les élémnts html\n  //Elle récupère les données crées précedemment\n  //$el ?\n  render: function() {\n    var animalTemplate = this.template(this.model.toJSON());\n    this.$el.html(animalTemplate);\n    return this;\n  },\n\n  //Evènements spécifiques à Backbone\n  events: {\n    'mouseover': 'addBgColor',\n    'mouseout': 'removeBgColor'\n  },\n\n  //Ajout au template, à la balise #allFlower est modifiée ?\n  //balise article (référence)\n  addBgColor: function() {\n    this.$el.addClass(\"bgColorImage\");\n  },\n\n  removeBgColor: function() {\n    this.$el.removeClass(\"bgColorImage\");\n  }\n\n});","console.log(\"singleCreatorView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.singleCreatorView = Backbone.View.extend({\n\n  model: app.creators,\n  template: _.template( $(\"#flowerElement\").html() ),\n\n    /*initialize: function() {\n\t\t\tthis.template = _.template($('#creatorsTemplate').html());\n\t\t\tthis.listenTo(this.model, 'change', this.render);\n\t},*/\n\n  render: function(){\n\t\t\tvar creatorTemplate = this.$el.html(this.template(this.model.attributes));\n\t\t\tthis.$el.html(creatorTemplate);\n    \t\treturn this;\n\t},\n\n\n});","console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.AnimalsCollection = Backbone.Collection.extend({\n\n  model: app.singleAnimal\n\n});\n","console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.CreatorsCollection = Backbone.Collection.extend({\n\n  model: app.singleCreator\n\n});\n","console.log(\"router\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n//Création d'un routeur\n//Sur le modèle clé / valeur\n//La route est sur la gauche\napp.Router = Backbone.Router.extend({\n\n\troutes :{\n\t  //Définit une route pour index.html\n\t  //La méthode noCopy sera appelée\n\t  \"\": \"noCopy\",\n\t  //Les méthodes appelées pour :\n\t  //#heirloomRose, #rainbowRose, #redRose\n\t  \"wolf\" : \"wolfMessage\",\n\t  \"owl\": \"owlMessage\",\n\t  \"panda\" : \"pandaMessage\"\n\t},\n\n\tnoCopy: function() {\n  \t  $(\"#copy\").html(\"\");\n\t},\n\n\twolfMessage: function() {\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\n\t},\n\n\towlMessage: function() {\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\n\t},\n\n\tpandaMessage: function() {\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\n\t}\n\n});","console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\nvar wolf = new app.singleAnimal({\n  name: \"Polygon Wolf\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/wolf.svg\",\n  link: \"wolf\"\n});\n\nvar owl = new app.singleAnimal({\n  name: \"Polygon Owl\",\n  price: 29.95,\n  color: \"orange\",\n  img: \"images/owl.svg\",\n  link: \"owl\"\n});\n\nvar panda = new app.singleAnimal({\n  name: \"Polygon Panda\",\n  price: 19.95,\n  img: \"images/panda.svg\",\n  link: \"panda\"\n});\n/*\nvar animalGroup = new app.AnimalsCollection([\n  wolf, owl, panda\n]);\n\nvar animalGroupView = new app.allAnimalsView({ collection: animalGroup});\n\n$(\"#allFlowers\").html(animalGroupView.render().el);*/\n\nvar creator = new app.singleCreator({id:1});\ncreator.fetch();\n\nvar creatorGroup = new app.CreatorsCollection();\n//creatorsGroup.fetch();\n\nvar creatorGroupView = new app.allCreatorsView({ collection: creatorGroup});\n\n$(\"#allFlowers\").html(creatorGroupView.render().el);\n\n/*\nvar hello = new creatorsView({\n      el: $('#creatorsTemplate').first(),\n      model: creatorsModel\n    });*/\n\n//Création d'une nouvelle instance de router \n//nommée flowerRouter\nvar animalRouter = new app.Router();\n\n//\nBackbone.history.start();\n\n\n/*flowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());*/\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}