{"version":3,"sources":["bb-views/allAnimalsView.js","bb-views/allCreatorsView.js","bb-views/singleAnimalView.js","bb-views/singleCreatorView.js","yy-routes/router.js","aa-models/singleAnimalModel.js","aa-models/singleCreatorModel.js","xx-collections/allAnimals.js","xx-collections/allCreators.js","zz-main/main.js"],"names":["app","allAnimalsView","Backbone","View","extend","url","model","singleAnimal","initialize","this","fetch","bind","render","tagName","collection","each","addAnimal","animal","animalView","singleAnimalView","$el","append","el","allCreatorsView","addCreator","creator","creatorView","singleCreatorView","className","template","_","$","html","JSON","toJSON","console","log","animalTemplate","Objects","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","singleCreator","creatorTemplate","Router","routes","","wolf","owl","panda","creators","animals","put-animal","update-animal","delete-animal","put-creator","update-creator","delete-creator","hide","default","wolfMessage","owlMessage","pandaMessage","creatorPage","show","success","alert","stringify","animalPage","putAnimalPage","updateAnimalPage","deleteAnimalPage","putCreatorPage","updateCreatorPage","deleteCreatorPage","Model","urlRoot","parse","response","values","data","animalArray","i","length","animalArrayDetail_i","link","name","price","color","img","push","get","on","defaults","phone","AnimalsCollection","Collection","CreatorsCollection","animalRouter","history","start"],"mappings":"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","file":"scripts.min.js","sourcesContent":["//console.log(\"allAnimalsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allAnimalsView = Backbone.View.extend({\n\n  url: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/polygonalanimals',\n  model:app.singleAnimal,\n\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n  model:app.singleAnimal,\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addAnimal, this);\n        return this;\n  },\n\n addAnimal: function(animal) {\n        var animalView = new app.singleAnimalView ({ model: animal });\n        this.$el.append(animalView.render().el);\n }\n\n});","//console.log(\"allCreatorsView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allCreatorsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addCreator, this);\n        return this;\n  },\n\n addCreator: function(creator) {\n        var creatorView = new app.singleCreatorView ({ model: creator });\n        this.$el.append(creatorView.render().el);\n }\n\n});","//console.log(\"singleAnimalView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for a single model view, which is one flower\napp.singleAnimalView = Backbone.View.extend({\n\nurl: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/polygonalanimals',\nmodel:app.singleAnimal,\n\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n//tagname définit le nom de la balise HTML dans lequelles les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbonne définira par défaut la balise div\n  tagName: \"article\",\n  className: \"flowerListItem\",\n\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n  template: _.template( $(\"#flowerElement\").html() ),\n\n  //render construit les élémnts html\n  //Elle récupère les données crées précedemment\n  //$el ?\n  render: function() {\n    var JSON = this.model.toJSON();\n    console.log(JSON);\n    var animalTemplate = this.template({Objects: JSON});\n    this.$el.html(animalTemplate);\n    return this;\n  },\n\n  //Evènements spécifiques à Backbone\n  events: {\n    'mouseover': 'addBgColor',\n    'mouseout': 'removeBgColor'\n  },\n\n  //Ajout au template, à la balise #allFlower est modifiée ?\n  //balise article (référence)\n  addBgColor: function() {\n    this.$el.addClass(\"bgColorImage\");\n  },\n\n  removeBgColor: function() {\n    this.$el.removeClass(\"bgColorImage\");\n  }\n\n});","//console.log(\"singleCreatorView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.singleCreatorView = Backbone.View.extend({\n\n  url: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/creators',\n  model:app.singleCreator,\n\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n  tagName: \"articleCreator\",\n  className: \"creatorListItem\",\n\n  template: _.template( $(\"#creatorElement\").html() ),\n\n/*  initialize: function() {\n\t\t\tthis.template = _.template($('#creatorsTemplate').html());\n\t\t\tthis.listenTo(this.model, 'change', this.render);\n\t},*/\n\n   render: function() {\n    var creatorTemplate = this.template(this.model.toJSON());\n    this.$el.html(creatorTemplate);\n    return this;\n  },\n\n\n});","//console.log(\"router\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n//Création d'un routeur\n//Sur le modèle clé / valeur\n//La route est sur la gauche\napp.Router = Backbone.Router.extend({\n\n\troutes :{\n\t  //Définit une route pour index.html\n\t  //La méthode noCopy sera appelée\n\t  \"\": \"default\",\n\t  //Les méthodes appelées pour :\n\t  //#heirloomRose, #rainbowRose, #redRose\n\t  \"wolf\" : \"wolfMessage\",\n\t  \"owl\": \"owlMessage\",\n\t  \"panda\" : \"pandaMessage\",\n\t  \"creators\" : \"creatorPage\",\n\t  \"animals\" : \"animalPage\",\n\t  \"put-animal\" : \"putAnimalPage\",\n\t  \"update-animal\" : \"updateAnimalPage\",\n\t  \"delete-animal\" : \"deleteAnimalPage\",\n\t  \"put-creator\" : \"putCreatorPage\",\n\t  \"update-creator\" : \"updateCreatorPage\",\n\t  \"delete-creator\" : \"deleteCreatorPage\"\n\t},\n\n\tinitialize: function() {\n        $(\".form-container\").hide();\n        $(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-create\").hide();\n    },\n\n\tdefault: function() {\n  \t  $(\"#copy\").html(\"\");\n  \t  $(\".form-container\").hide();\n  \t  $(\".form-creator-update\").hide();\n\t  $(\".form-creator-delete\").hide();\n\t  $(\".form-creator-create\").hide();\n\t},\n\n\twolfMessage: function() {\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\n\t},\n\n\towlMessage: function() {\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\n\t},\n\n\tpandaMessage: function() {\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\n\t},\n\n\tcreatorPage: function() {\n\n\t//creator.fetch();\n\n\t//var creatorGroup = new app.CreatorsCollection(creator);\n\t//creatorsGroup.fetch();\n\n\t//var creatorGroupView = new app.allCreatorsView({ collection: creatorGroup});\n\n\t//(\"#allCreators\").html(creatorGroupView.render().el);\n\n\t$(\"#allFlowers\").hide();\n  \t$(\"#allCreators\").show();\n  \t$(\".form-container\").hide();\n  \t$(\".animal-buttons\").hide();\n  \t$(\".creators-buttons\").show();\n\n\tvar creator = new app.singleCreator();\n\n\tcreator.fetch({\n\t    success: function (creator) {\n\t        alert(JSON.stringify(creator));\n\t\t    }\n\n\t\t});\n\n\tvar creatorView = new app.singleCreatorView({ model: creator});\n\n\t$(\"#allCreators\").html(creatorView.render().el);\n\n\t},\n\n\tanimalPage: function() {\n\n\t  $(\"#allCreators\").hide();\n\t  $(\"#allFlowers\").show();\n\t  $(\".form-container\").hide();\n\t  $(\".creators-buttons\").hide();\n\t  $(\".animal-buttons\").show();\n\n\t  var animal = new app.singleAnimal();\n\n\t  animal.fetch({\n\t    success: function (animal) {\n\t        alert(JSON.stringify(animal));\n\t\t    }\n\n\t\t});\n\n\t  var animalView = new app.singleAnimalView({ model: animal});\n\n\t  $(\"#allFlowers\").html(animalView.render().el);\n\n\t  /*animal.fetch({\n\t    success: function (animal) {\n\t        alert(JSON.stringify(animal));\n\t\t    }\n\n\t\t});*/\n\n/*\t  var animalGroup = new app.AnimalsCollection([\n\t\t  wolf, owl, panda\n\t\t]);*/\n\n\t  //var animalGroup = new app.AnimalsCollection(animal);\n\n\t  //var animalGroup = new app.AnimalsCollection([wolf, owl]);\n\t  //console.log(animalGroup);\n\n\t  /*var animalGroupView = new app.allAnimalsView({ model: animal});\n\n\t  $(\"#allFlowers\").html(animalGroupView.render().el);*/\n\n\t},\n\n\tputAnimalPage: function(){\n\n\t\t$(\".animal-buttons\").hide();\n\n\t},\n\n\tupdateAnimalPage: function(){\n\n\t\t$(\".animal-buttons\").hide();\n\t\t\n\t},\n\n\tdeleteAnimalPage: function(){\n\n\t\t$(\".animal-buttons\").hide();\n\t\t\n\t},\n\n\tputCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-create\").show();\n\n\t},\n\n\tupdateCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-creator-create\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-update\").show();\n\t\t\n\t},\n\n\tdeleteCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-creator-create\").hide();\n\t\t$(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").show();\n\t\t\n\t}\n\n});","//console.log(\"singleAnimalModel\");\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleAnimal = Backbone.Model.extend({\n\n//Chaque instance de modèles auront leurs propres propriétés\n/*  defaults: {\n    link: \"test\",\n    name: \"lol\",\n    price: \"4.5\",\n    color: \"pink\",\n    img: \"images/placeholder.jpg\"\n  },*/\n\nurlRoot: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/polygonalanimals',\n\nparse: function(response) {\n       //console.log(response,response.data,response.data[0].name,response.data[0].price);\n       /*console.log(response.data);\n       console.log(response.COLUMNS);*/\n\n       var values = response.data;\n       var animalArray = [{}];\n\n       //console.log(response.data);\n\n       for (var i = 1, length = values.length; i < 4; i++) {\n\n          var animalArrayDetail_i = {};\n          animalArrayDetail_i.link = response.data[i].link;\n          animalArrayDetail_i.name = response.data[i].name;\n          animalArrayDetail_i.price = response.data[i].price;\n          animalArrayDetail_i.color = response.data[i].color;\n          animalArrayDetail_i.img = response.data[i].img;\n          //console.log(animalArrayDetail_i);\n          animalArray.push(animalArrayDetail_i);\n          \n          //console.log(response.data[i]);\n\n      }\n\n      console.log(response.data);\n\n       return values;\n\n\n            /*console.log(i);\n            console.log(response.data[i].price);\n\n            var link = response.data[i].link;\n            animalArrayDetail.push(\"link:\"+link);\n\n            var name = response.data[i].name;\n            animalArrayDetail.push(\"name:\"+name);\n\n            var price = response.data[i].price;\n            animalArrayDetail.push(\"price:\"+price);\n\n            var color = response.data[i].color;\n            animalArrayDetail.push(\"color:\"+color);\n\n            var img = response.data[i].img;\n            animalArrayDetail.push(\"img:\"+img);\n\n            animalArrayDetail.push(response.data[i]);*/\n            //animalArray.push(animalArrayDetail);\n\n         //}\n       //console.log(animalArray);\n       /*{\n        link: response.data[4].link,\n        name:response.data[4].name,\n        price:response.data[4].price,\n        color:response.data[4].color,\n        img:response.data[4].img\n      }*/\n  },\n  \n  initialize: function() {\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\n  \n    // Cut and paste this inside our initialize method\n    //Cela permet d'écouter les changements du modèle ?\n    // Modèle : les fleurs\n    this.on('change', function(){\n      console.log(\"Something in our model has changed\");\n    });\n\n    // Cut and paste this inside our initialize method\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\n    });\n\n  }\n\n});\n\n","//console.log(\"singleCreator\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleCreator = Backbone.Model.extend({\n\n\t\tdefaults: {\n\t\t\t  name: \"test\",\n\t\t\t  phone: \"00-00-00-00-00\",\n\t\t  },\n\n      urlRoot: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/creators',\n\n      parse: function(response) {\n           //console.log(\"parse\");\n           //console.log(response,response.data,response.data[4]);\n           return {\n            name: response.data[4].name,\n            phone:response.data[4].phone,\n          }\n      },\n\n  initialize: function() {\n     console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it's his phone \" + this.get(\"phone\"));\n\n     this.on('change', function(){\n       console.log(\"Something in our model has changed\");\n     });\n\n     this.fetch();\n \n   }\n\n});\n\n","//console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.AnimalsCollection = Backbone.Collection.extend({\n\n  url: 'http://localhost:8888/PolygonalAnimalsApiDebug.com/public/polygonalanimals',\n  model:app.singleAnimal\n\n});\n","//console.log(\"allAnimals\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.CreatorsCollection = Backbone.Collection.extend({\n\n  model: app.singleCreator\n\n});\n","//console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\n/*var wolf = new app.singleAnimal({\n  name: \"Polygon Wolf\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/wolf.svg\",\n  link: \"wolf\"\n});\n\nvar owl = new app.singleAnimal({\n  name: \"Polygon Owl\",\n  price: 29.95,\n  color: \"orange\",\n  img: \"images/owl.svg\",\n  link: \"owl\"\n});\n\nvar panda = new app.singleAnimal({\n  name: \"Polygon Panda\",\n  price: 19.95,\n  img: \"images/panda.svg\",\n  link: \"panda\"\n});*/\n\n//$(\"#allFlowers\").html(animalGroupView.render().el);\n\n//$(\"#allCreators\").html(creatorGroupView.render().el);\n\n/*\nvar hello = new creatorsView({\n      el: $('#creatorsTemplate').first(),\n      model: creatorsModel\n    });*/\n\n//Création d'une nouvelle instance de router \n//nommée flowerRouter\nvar animalRouter = new app.Router();\n\n$(\".form-container\").hide();\nBackbone.history.start();\n\n\n/*flowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());*/\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}