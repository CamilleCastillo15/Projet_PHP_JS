{"version":3,"sources":["aa-models/singleAnimalModel.js","bb-views/allAnimalsView.js","bb-views/singleAnimalView.js","xx-collections/allAnimals.js","yy-routes/router.js","zz-main/main.js"],"names":["console","log","app","singleFlower","Backbone","Model","extend","defaults","color","img","allFlowersView","View","tagName","render","this","collection","each","addFlower","flower","flowerView","singleFlowerView","model","$el","append","el","className","template","_","$","html","flowerTemplate","toJSON","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","FlowersCollection","Collection","Router","routes","","heirloomRose","rainbowRose","redRose","noCopy","heirloomRoseMessage","rainbowRoseMessage","redRoseMessage","redRoses","name","price","link","rainbowRoses","heirloomRoses","flowerGroup","flowerGroupView","flowerRouter","history","start"],"mappings":"AAAAA,QAAAC,IAAA,oBAKA,IAAAC,KAAAA,OAGAA,KAAAC,aAAAC,SAAAC,MAAAC,QAGAC,UACAC,MAAA,OACAC,IAAA,4BCbAT,QAAAC,IAAA,gBAGA,IAAAC,KAAAA,OAGAA,KAAAQ,eAAAN,SAAAO,KAAAL,QAEAM,QAAA,UAEAC,OAAA,WAEA,MADAC,MAAAC,WAAAC,KAAAF,KAAAG,UAAAH,MACAA,MAGAG,UAAA,SAAAC,GACA,GAAAC,GAAA,GAAAjB,KAAAkB,kBAAAC,MAAAH,GACAJ,MAAAQ,IAAAC,OAAAJ,EAAAN,SAAAW,OCjBAxB,QAAAC,IAAA,mBAGA,IAAAC,KAAAA,OAGAA,KAAAkB,iBAAAhB,SAAAO,KAAAL,QAKAM,QAAA,UACAa,UAAA,iBAGAC,SAAAC,EAAAD,SAAAE,EAAA,kBAAAC,QAKAhB,OAAA,WACA,GAAAiB,GAAAhB,KAAAY,SAAAZ,KAAAO,MAAAU,SAEA,OADAjB,MAAAQ,IAAAO,KAAAC,GACAhB,MAIAkB,QACAC,UAAA,aACAC,SAAA,iBAKAC,WAAA,WACArB,KAAAQ,IAAAc,SAAA,iBAGAC,cAAA,WACAvB,KAAAQ,IAAAgB,YAAA,mBCvCAtC,QAAAC,IAAA,YAMA,IAAAC,KAAAA,OAEAA,KAAAqC,kBAAAnC,SAAAoC,WAAAlC,QAEAe,MAAAnB,IAAAC,eCVAH,QAAAC,IAAA,SAGA,IAAAC,KAAAA,OAKAA,KAAAuC,OAAArC,SAAAqC,OAAAnC,QAEAoC,QAGAC,GAAA,SAGAC,aAAA,sBACAC,YAAA,qBACAC,QAAA,kBAGAC,OAAA,WACAnB,EAAA,SAAAC,KAAA,KAGAmB,oBAAA,WACApB,EAAA,SAAAC,KAAA,kDAGAoB,mBAAA,WACArB,EAAA,SAAAC,KAAA,0CAGAqB,eAAA,WACAtB,EAAA,SAAAC,KAAA,8DClCA7B,QAAAC,IAAA,QACA2B,EAAA,MAOA,IAAAuB,UAAA,GAAAjD,KAAAC,cACAiD,KAAA,YACAC,MAAA,MACA7C,MAAA,MACAC,IAAA,kBACA6C,KAAA,YAGAC,aAAA,GAAArD,KAAAC,cACAiD,KAAA,gBACAC,MAAA,MACA7C,MAAA,SACAC,IAAA,iBACA6C,KAAA,gBAGAE,cAAA,GAAAtD,KAAAC,cACAiD,KAAA,iBACAC,MAAA,MACA5C,IAAA,mBACA6C,KAAA,iBAGAG,YAAA,GAAAvD,KAAAqC,mBACAY,SAAAI,aAAAC,gBAGAE,gBAAA,GAAAxD,KAAAQ,gBAAAK,WAAA0C,aAEA7B,GAAA,eAAAC,KAAA6B,gBAAA7C,SAAAW,GAIA,IAAAmC,cAAA,GAAAzD,KAAAuC,MAGArC,UAAAwD,QAAAC","file":"scripts.min.js","sourcesContent":["console.log(\"singleFlowerModel\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleFlower = Backbone.Model.extend({\n\n//Chaque instance de modèles auront leurs propres propriétés\n  defaults: {\n    color: \"pink\",\n    img: \"images/placeholder.jpg\"\n  }\n\n  /*\n  initialize: function() {\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\n  \n    // Cut and paste this inside our initialize method\n    //Cela permet d'écouter les changements du modèle ?\n    // Modèle : les fleurs\n    this.on('change', function(){\n      console.log(\"Something in our model has changed\");\n    });\n\n    // Cut and paste this inside our initialize method\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\n    });\n\n  }*/\n\n});\n\n","console.log(\"allFlowerView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for all the flowers\napp.allFlowersView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addFlower, this);\n        return this;\n  },\n\n addFlower: function(flower) {\n        var flowerView = new app.singleFlowerView ({ model: flower });\n        this.$el.append(flowerView.render().el);\n }\n\n});","console.log(\"singleFlowerView\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n// The view for a single model view, which is one flower\napp.singleFlowerView = Backbone.View.extend({\n\n//tagname définit le nom de la balise HTML dans lequelles les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbonne définira par défaut la balise div\n  tagName: \"article\",\n  className: \"flowerListItem\",\n\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n  template: _.template( $(\"#flowerElement\").html() ),\n\n  //render construit les élémnts html\n  //Elle récupère les données crées précedemment\n  //$el ?\n  render: function() {\n    var flowerTemplate = this.template(this.model.toJSON());\n    this.$el.html(flowerTemplate);\n    return this;\n  },\n\n  //Evènements spécifiques à Backbone\n  events: {\n    'mouseover': 'addBgColor',\n    'mouseout': 'removeBgColor'\n  },\n\n  //Ajout au template, à la balise #allFlower est modifiée ?\n  //balise article (référence)\n  addBgColor: function() {\n    this.$el.addClass(\"bgColorImage\");\n  },\n\n  removeBgColor: function() {\n    this.$el.removeClass(\"bgColorImage\");\n  }\n\n});","console.log(\"allFlower\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.FlowersCollection = Backbone.Collection.extend({\n\n  model: app.singleFlower\n\n});\n","console.log(\"routes\");\n\n// Namespace our flowerApp\nvar app = app || {};\n\n//Création d'un routeur\n//Sur le modèle clé / valeur\n//La route est sur la gauche\napp.Router = Backbone.Router.extend({\n\n\troutes :{\n\t  //Définit une route pour index.html\n\t  //La méthode noCopy sera appelée\n\t  \"\": \"noCopy\",\n\t  //Les méthodes appelées pour :\n\t  //#heirloomRose, #rainbowRose, #redRose\n\t  \"heirloomRose\" : \"heirloomRoseMessage\",\n\t  \"rainbowRose\": \"rainbowRoseMessage\",\n\t  \"redRose\" : \"redRoseMessage\"\n\t},\n\n\tnoCopy: function() {\n  \t  $(\"#copy\").html(\"\");\n\t},\n\n\theirloomRoseMessage: function() {\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\n\t},\n\n\trainbowRoseMessage: function() {\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\n\t},\n\n\tredRoseMessage: function() {\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\n\t}\n\n});","console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\nvar redRoses = new app.singleFlower({\n  name: \"Red Roses\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/wolf.svg\",\n  link: \"redRose\"\n});\n\nvar rainbowRoses = new app.singleFlower({\n  name: \"Rainbow Roses\",\n  price: 29.95,\n  color: \"orange\",\n  img: \"images/owl.svg\",\n  link: \"rainbowRose\"\n});\n\nvar heirloomRoses = new app.singleFlower({\n  name: \"Heirloom roses\",\n  price: 19.95,\n  img: \"images/panda.svg\",\n  link: \"heirloomRose\"\n});\n\nvar flowerGroup = new app.FlowersCollection([\n  redRoses, rainbowRoses, heirloomRoses\n]);\n\nvar flowerGroupView = new app.allFlowersView({ collection: flowerGroup});\n\n$(\"#allFlowers\").html(flowerGroupView.render().el);\n\n//Création d'une nouvelle instance de router \n//nommée flowerRouter\nvar flowerRouter = new app.Router();\n\n//\nBackbone.history.start();\n\n\n/*flowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());*/\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}