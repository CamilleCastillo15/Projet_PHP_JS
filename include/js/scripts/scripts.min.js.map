{"version":3,"sources":["bb-views/allAnimalsView.js","bb-views/allCreatorsView.js","bb-views/singleAnimalView.js","bb-views/singleCreatorView.js","aa-models/AnimalsCreatorModel.js","aa-models/AnimalsCreatorPutModel.js","aa-models/singleAnimalModel.js","aa-models/singleCreatorModel.js","yy-routes/router.js","xx-collections/allAnimals.js","xx-collections/allCreators.js","zz-main/main.js"],"names":["app","allAnimalsView","Backbone","View","extend","url","model","singleAnimal","initialize","this","fetch","bind","render","tagName","collection","each","addAnimal","animal","animalView","singleAnimalView","$el","append","el","allCreatorsView","addCreator","creator","creatorView","singleCreatorView","className","template","_","$","html","JSON","toJSON","animalTemplate","Objects","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","singleCreator","creatorTemplate","AnimalsCreator","Model","options","Creatorid","id","AnimalsCreatorPut","urlRoot","parse","response","values","data","on","console","log","get","Router","routes","","wolf","owl","panda","creators","animals","put-animal","update-animal","delete-animal","put-creator","update-creator","delete-creator","identificationPage","hide","default","wolfMessage","owlMessage","pandaMessage","show","submit","event","preventDefault","login","val","password","sendAuthentication","xhr","user","pass","token","concat","setRequestHeader","btoa","newAuth","name","phone","save","beforeSend","success","alert","error","responseText","creatorPage","animalPage","putAnimalPage","color","price","newAnimal","type","updateAnimalPage","animalId","creatorId","deleteAnimalPage","destroy","putCreatorPage","newCreator","updateCreatorPage","deleteCreatorPage","AnimalsCollection","Collection","CreatorsCollection","animalRouter","history","start"],"mappings":"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","file":"scripts.min.js","sourcesContent":["var app = app || {};\n\n// La vue pour tous les animaux\napp.allAnimalsView = Backbone.View.extend({\n\n//L'url interrogée ainsi que le modèle utilisé sont spécifiés\n  url: 'PolygonalAnimalsApi.com/public/polygonalanimals',\n  model:app.singleAnimal,\n\n//initialize est aussi appelée au lancement de la vue\n//Le modèle va se synchroniser avec les données en ligne avec la fonction fetch()\n//La vue va se modifier quand un changement en ligne sera notifié\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n//La balise dans laquelle les données pourront être affichées se nommera \"section\"\n  tagName: \"section\",\n\n//Chaque objet de la collection sera ajoutée\n  render: function() {\n      this.collection.each(this.addAnimal, this);\n        return this;\n  },\n\n  //Et affiché dans le template\n   addAnimal: function(animal) {\n          var animalView = new app.singleAnimalView ({ model: animal });\n          this.$el.append(animalView.render().el);\n   }\n\n});","var app = app || {};\n\n// La vue pour tous les Creators\napp.allCreatorsView = Backbone.View.extend({\n\n  tagName: \"section\",\n\n  render: function() {\n      this.collection.each(this.addCreator, this);\n        return this;\n  },\n\n addCreator: function(creator) {\n        var creatorView = new app.singleCreatorView ({ model: creator });\n        this.$el.append(creatorView.render().el);\n }\n\n});","var app = app || {};\n\n//La vue pour un seul des Animals\napp.singleAnimalView = Backbone.View.extend({\n\nurl: 'PolygonalAnimalsApi.com/public/polygonalanimals',\nmodel:app.singleAnimal,\n\n//initialize est aussi appelée au lancement de la vue\n//Le modèle va se synchroniser avec les données en ligne avec la fonction fetch()\n//La vue va se modifier quand un changement en ligne sera notifié\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n//tagname définit le nom de la balise HTML dans laquelle les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbone définira par défaut la balise div\n  tagName: \"article\",\n  className: \"animalListItem\",\n\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n  template: _.template( $(\"#animalElement\").html() ),\n\n  //render construit les élémnts html\n  //Elle récupère les données crées précedemment\n  //Les injecte dans le template sous forme d'objects de type JSON\n  //$el ?\n  render: function() {\n    var JSON = this.model.toJSON();\n    //console.log(JSON);\n    var animalTemplate = this.template({Objects: JSON});\n    this.$el.html(animalTemplate);\n    return this;\n  },\n\n  //Evènements spécifiques à Backbone\n  events: {\n    'mouseover': 'addBgColor',\n    'mouseout': 'removeBgColor'\n  },\n\n  //Le rendu du template est modifié\n  //Les éléments voient leurs couleurs changer quand on leur passe la souris dessus\n  addBgColor: function() {\n    this.$el.addClass(\"bgColorImage\");\n  },\n\n  removeBgColor: function() {\n    this.$el.removeClass(\"bgColorImage\");\n  }\n\n});","var app = app || {};\n\n// La vue pour un seul des Creators\napp.singleCreatorView = Backbone.View.extend({\n\n  url: 'PolygonalAnimalsApi.com/public/creators',\n  model:app.singleCreator,\n\n//initialize est aussi appelée au lancement de la vue\n//Le modèle va se synchroniser avec les données en ligne avec la fonction fetch()\n//La vue va se modifier quand un changement en ligne sera notifié\ninitialize: function() {\n    this.model.fetch();\n    this.model.bind('change', this.render, this);\n  },\n\n//tagname définit le nom de la balise HTML dans laquelle les données vont être insérées\n//className définit la classe du tagName (optionnel)\n//tagName est aussi optionnel, mais Backbone définira par défaut la balise div\n  tagName: \"articleCreator\",\n  className: \"creatorListItem\",\n\n//Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\n\n  template: _.template( $(\"#creatorElement\").html() ),\n\n//render construit les élémnts html\n//Elle récupère les données crées précedemment\n//Les injecte dans le template sous forme d'objects de type JSON\n//$el ?\n   render: function() {\n    var JSON = this.model.toJSON();\n    var creatorTemplate = this.template({Objects: JSON});\n    this.$el.html(creatorTemplate);\n    return this;\n  },\n\n\n});","// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.AnimalsCreator = Backbone.Model.extend({\n\n   //urlRoot: 'PolygonalAnimalsApi.com/public/creators',\n\n //La fonction initialize avec le paramètre options\n //permet ici de créer des variables qui peuvent être passées dans l'URL interrogée\n initialize: function(options) {\n    this.Creatorid = options.Creatorid;\n    this.id = options.id;\n  },\n\n  //La fonction url spécifie l'url interrogée ainsi que l'emplacement des paramètres\n  url: function() {\n\n    return 'PolygonalAnimalsApi.com/public/creators/' + this.Creatorid + '/polygonalanimals/' + this.id;\n  \n  }\n\n});\n","var app = app || {};\n\n//Le modèle AnimalsCreatorPut permet de ne passer qu'un seul paramètre dans l'URL\n//Dans le cas d'une requête PUT pour créer un Animal\napp.AnimalsCreatorPut = Backbone.Model.extend({\n\n  initialize: function(options) {\n\n    this.id = options.id;\n\n  },\n\n  url: function() {\n\n    return 'PolygonalAnimalsApi.com/public/creators/' + this.id + '/polygonalanimals';\n  \n  }\n\n});\n","var app = app || {};\n\napp.singleAnimal = Backbone.Model.extend({\n\n//urlRoot définit la racine de l'URL interrogée dans ce modèle\nurlRoot: 'PolygonalAnimalsApi.com/public/polygonalanimals',\n\n//La fonction parse sélectionne les données JSON récupérées de l'URL\n//Car elles sont encapsulées dans un tableau \"data\"\nparse: function(response) {\n\n       var values = response.data;\n       return values;\n  },\n  \n  initialize: function() {\n\n    //Cela permet d'écouter les changements du modèle \n    this.on('change', function(){\n    });\n\n    // Création d'une fonction, qui, à chaque fois que le prix change, \n    // va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){ \n\n    });\n\n  }\n\n});\n\n","var app = app || {};\n\n//Création d'une variable\napp.singleCreator = Backbone.Model.extend({\n\n      urlRoot: 'PolygonalAnimalsApi.com/public/creators',\n\n      parse: function(response) {\n\n           var values = response.data;\n            return values;\n      },\n\n  initialize: function() {\n\n     console.log(\"A model instance named \" + this.get(\"name\") +  \n      \" has been created and it's his phone \" + this.get(\"phone\"));\n\n     this.on('change', function(){\n       console.log(\"Something in our model has changed\");\n     });\n \n   }\n\n});\n\n","var app = app || {};\n\n//Création d'un routeur\n//Sur le modèle clé / valeur\n//La route est sur la gauche\n//La fonction appelée sur la droite\napp.Router = Backbone.Router.extend({\n\n\troutes :{\n\t  //Définit une route pour index.html\n\t  //La méthode noCopy sera appelée\n\t  \"\": \"default\",\n\t  \"wolf\" : \"wolfMessage\",\n\t  \"owl\": \"owlMessage\",\n\t  \"panda\" : \"pandaMessage\",\n\t  \"creators\" : \"creatorPage\",\n\t  \"animals\" : \"animalPage\",\n\t  \"put-animal\" : \"putAnimalPage\",\n\t  \"update-animal\" : \"updateAnimalPage\",\n\t  \"delete-animal\" : \"deleteAnimalPage\",\n\t  \"put-creator\" : \"putCreatorPage\",\n\t  \"update-creator\" : \"updateCreatorPage\",\n\t  \"delete-creator\" : \"deleteCreatorPage\",\n\t  \"identificationPage\" : \"identificationPage\"\n\t},\n\n//L'état du DOM au lancement du site\n\tinitialize: function() {\n        $(\".form-container\").hide();\n        $(\".form-auth\").hide();\n        $(\"#allAnimals\").hide();\n        $(\"#allCreators\").hide();\n        $(\".creators-buttons\").hide();\n        $(\".animal-buttons\").hide();\n        $(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-create\").hide();\n\t\t$(\".form-animal-update\").hide();\n\t\t$(\".form-animal-delete\").hide();\n\t\t$(\".form-animal-create\").hide();\n    },\n\n//L'état du DOM par défaut (sans route spécifiée)\n\tdefault: function() {\n  \t  $(\"#copy\").html(\"\");\n  \t  $(\"#allAnimals\").hide();\n  \t  $(\"#allCreators\").hide();\n  \t  $(\".creators-buttons\").hide();\n  \t  $(\".animal-buttons\").hide();\n  \t  $(\".form-container\").hide();\n  \t  $(\".form-auth\").hide();\n  \t  $(\".form-creator-update\").hide();\n\t  $(\".form-creator-delete\").hide();\n\t  $(\".form-creator-create\").hide();\n\t  $(\".form-animal-update\").hide();\n\t  $(\".form-animal-delete\").hide();\n\t  $(\".form-animal-create\").hide();\n\t},\n\n//Ces 3 routes définissent un message qui va s'afficher quand l'utilisateur va cliquer sur un élément\n//de type Polygonalanimal \n\twolfMessage: function() {\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\n\t},\n\n\towlMessage: function() {\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\n\t},\n\n\tpandaMessage: function() {\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\n\t},\n\n//Le JS de la route identificationPage (page d'identification)\n\tidentificationPage: function(){\n\n//Plusieurs balises sans rapport avec la page vont être cachées (grâce à .hide())\n\t$(\"#allAnimals\").hide();\n\t$(\"#allCreators\").hide();\n\t$(\".form-container_2\").hide();\n\t$(\".form-auth\").show();\n\n//Le formulaire .form-auth va exécuter des actions quand l'utilisateur clique dessus\n\t$(\".form-auth\" ).submit(function( event ) {\n\t  \n\t //Ses actions de bases (envoyer) vont être stoppées grâce à event.preventDefault();\n\t event.preventDefault();\n\n\t //Les valeurs rentrées par l'utilisateur (login et password) vont être récupérées\n\t  var login = $(\".form-auth .login\").val();\n\t  var password = $(\".form-auth .pass\").val();\n\n//Une fonction va être crée : elle permet d'envoyer des reqrêtes de type xhr = XmlHttpRequest\n//Elles permettent de placer des données en Entête de requête\n//Le but ici est de s'identifier grâce au service Basic auth crée sur Laravel (dans mon cas)\n\t  sendAuthentication = function (xhr) {\n\t\t  var user = login;// your actual username\n\t\t  var pass = password;// your actual password\n\t\t  var token = user.concat(\":\", pass);\n\t\t  xhr.setRequestHeader('Authorization', (\"Basic \".concat(btoa(token))));\n\t\t}\n\n//Pour envoyer une requête avec Backbone il faut aussi créer un modèle \"fantôme\"\n\t\t  var newAuth = new app.singleCreator({\n\n\t\t  \tname:\"test\",\n\t\t  \tphone:9999\n\n\t\t  });\n\n//Le paramètre beforeSend permettra de passer les paramètres de la requête\n\t\t  newAuth.save(null, {\n\n\t\t  \tbeforeSend: sendAuthentication,\n\n//Si la requête est passée, un message va être retourné\n\t\t  \tsuccess: function() {\n\t\t\t        alert(\"Vous êtes identifié.\");\n\t\t\t      },\n\n//Sinon le message d'erreur renvoyé par le serveur sera affiché\t  \n\t\t\t  error: function(model, response) {\n\t\t        alert(response.responseText);\n\t\t      }\n\n\t\t  });\n\n\t\t\n\t\t});\n\n\t},\n\n//La fonction de la page creatorPage\n//Elle permet d'afficher les éléments de type Creators\n\tcreatorPage: function() {\n\n\t$(\"#allAnimals\").hide();\n  \t$(\"#allCreators\").show();\n  \t$(\".form-container\").hide();\n  \t$(\".form-auth\").hide();\n  \t$(\".form-container_2\").hide();\n  \t$(\".animal-buttons\").hide();\n  \t$(\".creators-buttons\").show();\n\n//Pour cela il faut créer un modèle de type singleCreator\n//qui permet d'interroger la bonne URl et de récupérer les informations\n\tvar creator = new app.singleCreator();\n\n//Ensuite une vue sera crée, qui prendra pour modèle creator précédemment instancié\n\tvar creatorView = new app.singleCreatorView({ model: creator});\n\n//La balise allCreators récupera les données de la vue qui vont être crées\n\t$(\"#allCreators\").html(creatorView.render().el);\n\n\t},\n\n//La fonction de la page creatorPage\n//Elle permet d'afficher les éléments de type Animals\n\tanimalPage: function() {\n\n\t  $(\"#allCreators\").hide();\n\t  $(\"#allAnimals\").show();\n\t  $(\".form-container\").hide();\n\t  $(\".form-auth\").hide();\n\t  $(\".form-container_2\").hide();\n\t  $(\".creators-buttons\").hide();\n\t  $(\".animal-buttons\").show();\n\n\t  var animal = new app.singleAnimal();\n\n\t  var animalView = new app.singleAnimalView({ model: animal});\n\n\t  $(\"#allAnimals\").html(animalView.render().el);\n\n\t},\n\n//La fonction de la page putAnimalPage\n//Elle permet de créer des éléments de type Animals\n\tputAnimalPage: function(){\n\n\t\t$(\"#allAnimals\").hide();\n\t\t$(\".form-container_2\").show();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-animal-update\").hide();\n\t\t$(\".form-animal-delete\").hide();\n\t\t$(\".form-animal-create\").show();\n\n\t\t$(\".form-animal-create\" ).submit(function( event ) {\n\n\t\t  event.preventDefault();\n\n\t\t  //Creatorid représente l'id du Creator associé à l'Animal\n\t\t  //Car chaque Animal a un Creator associé.\n\t\t  //Creatorid est donc la clé étrangère permettant de relier \n\t\t  //l'Animal au Creator\n\t\t  var Creatorid = $(\".form-animal-create .creatorId\").val();\n\t\t  var color = $(\".form-animal-create .color\").val();\n  \t\t  var price = $(\".form-animal-create .price\").val();\n\n  \t\t  var newAnimal = new app.AnimalsCreatorPut({\n\n  \t\t  \tid:Creatorid, \n\t\t\tcolor:color,\n\t\t\tprice:price\n\n\t\t});\n\n\t\t\t  newAnimal.save(null ,{\n\n\t\t\t  \ttype: 'POST',\n\t\t\t  \t success: function () {\n\t\t\t\t    alert('L\\'animal a été crée.');\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\t\t\t        alert(response.responseText);\t      \n\n\t\t\t\t}\n\n\n\t\t\t  });\n\n\t\t\t\n\t\t\t});\n\n\t\t},\n\n//updateAnimalPage permet de mettre à jour des informations sur un Animal\n\tupdateAnimalPage: function(){\n\n\t\t$(\".animal-buttons\").hide();\n\t\t$(\"#allAnimals\").hide();\n\t\t$(\".form-container_2\").show();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-animal-update\").show();\n\t\t$(\".form-animal-delete\").hide();\n\t\t$(\".form-animal-create\").hide();\n\n\t\t$(\".form-animal-update\" ).submit(function( event ) {\n\n\t\t\t  //alert( \"Handler for .submit() called.\" );\n\t\t\t  event.preventDefault();\n\n\t\t\t  var animalId = $(\".form-animal-update .animalId\").val();\n\t\t\t  var creatorId = $(\".form-animal-update .creatorId\").val();\n\t\t\t  var color = $(\".form-animal-update .color\").val();\n\t\t\t  var price = $(\".form-animal-update .price\").val();\n\n\t\t\t  var newAnimal = new app.AnimalsCreator({\n\t\t\t  \tCreatorid:creatorId, \n\t\t\t  \tid:animalId, \n\t\t\t\tcolor:color,\n\t\t\t\tprice:price});\n\n\t\t\t  newAnimal.save(null, {\n\n\t\t\t  \t success: function () {\n\t\t\t\t    alert('L\\'animal a été mis à jour.');\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\t\t\t        alert(response.responseText);\n\t\t\t      }\n\n\t\t\t  \n\t\t\t  });\n\n\t\t\t\n\t\t\t});\n\t\t\n\t\t},\n\n//deleteAnimalPage permet de détruire un élément Animal\n\tdeleteAnimalPage: function(){\n\n\t\t$(\".animal-buttons\").hide();\n\t\t$(\"#allAnimals\").hide();\n\t\t$(\".form-container_2\").show();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-animal-update\").hide();\n\t\t$(\".form-animal-delete\").show();\n\t\t$(\".form-animal-create\").hide();\n\n\t\t$(\".form-animal-delete\" ).submit(function( event ) {\n\n\t\t\t  event.preventDefault();\n\n\t\t\t  var animalId = $(\".form-animal-delete .animalId\").val();\n\t\t\t  var creatorId = $(\".form-animal-delete .creatorId\").val();\n\n\t\t\t  var newAnimal = new app.AnimalsCreator({\n\n\t\t\t  \tid: animalId,\n\t\t\t  \tCreatorid: creatorId\n\n\t\t\t  });\n\n\t\t\t  newAnimal.destroy({\n\n\t\t\t  \t success: function() {\n\n\t\t\t\t    alert('This animal has been deleted.');\n\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\n\t\t\t        alert(response.responseText);\n\n\t\t\t      }\n\n\t\t\t  });\n\t\t  \n\t\t});\n\t\t\n\t},\n\n//putCreatorPage permet de créer un élément Creator\n\tputCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container_2\").hide();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-create\").show();\n\n\t\t$(\".form-creator-create\" ).submit(function( event ) {\n\t\t  //alert( \"Handler for .submit() called.\" );\n\t\t  event.preventDefault();\n\n\t\t  var name = $(\".form-creator-create .name\").val();\n\t\t  var phone = $(\".form-creator-create .phone\").val();\n\t\t  alert(phone);\n\n\t\t  var newCreator = new app.singleCreator({\n\n\t\t  \tname:name,\n\t\t  \tphone:phone\n\n\t\t  });\n\n\t\t  newCreator.save(null, {\n\n\n\t\t  \t\t  success: function () {\n\t\t\t\t    alert('Le creator a été crée.');\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\t\t\t        alert(response.responseText);\n\t\t\t      }\n\n\t\t  \t});\n\t\t  \n\t\t});\n\t},\n\n//updateCreatorPage permet de mettre à jour un élément Creator\n\tupdateCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-container_2\").hide();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-creator-create\").hide();\n\t\t$(\".form-creator-delete\").hide();\n\t\t$(\".form-creator-update\").show();\n\n\t\t$(\".form-creator-update\" ).submit(function( event ) {\n\n\t\t\t  //alert( \"Handler for .submit() called.\" );\n\t\t\t  event.preventDefault();\n\n\t\t\t  var id = $(\".form-creator-update .id\").val();\n\t\t\t  var name = $(\".form-creator-update .name\").val();\n\t\t\t  var phone = $(\".form-creator-update .phone\").val();\n\n\t\t\t  var newCreator = new app.singleCreator({\n\n\t\t\t  \tid: id,\n\t\t\t  \tname:name,\n\t\t\t  \tphone:phone\n\n\t\t\t  });\n\n\t\t\t  newCreator.save(null, {\n\n\n\t\t  \t\t  success: function () {\n\t\t\t\t    alert('Le creator a été modifié.');\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\t\t\t        alert(response.responseText);\n\t\t\t      }\n\n\t\t  \t});\n\t\t  \n\t\t});\n\t\t\n\t},\n\n//deleteCreatorPage permet de détuire un élément Creator\n\tdeleteCreatorPage: function(){\n\n\t\t$(\"#allCreators\").hide();\n\t\t$(\".form-container\").show();\n\t\t$(\".form-container_2\").hide();\n\t\t$(\".form-auth\").hide();\n\t\t$(\".form-creator-create\").hide();\n\t\t$(\".form-creator-update\").hide();\n\t\t$(\".form-creator-delete\").show();\n\n\t\t$(\".form-creator-delete\" ).submit(function( event ) {\n\n\t\t\t  event.preventDefault();\n\n\t\t\t  var id = $(\".form-creator-delete .id\").val();\n\n\t\t\t  var newCreator = new app.singleCreator({\n\n\t\t\t  \tid: id\n\n\t\t\t  });\n\n\t\t\t  newCreator.destroy({\n\n\t\t\t  \t success: function () {\n\t\t\t\t    alert('This creator has been deleted.');\n\t\t\t\t  },\n\t\t\t\t  \n\t\t\t\t  error: function(model, response) {\n\t\t\t\t  \t//JSON.parse(response.responseText);\n\t\t\t        alert(response.responseText);\n\t\t\t      }\n\n\t\t\t  });\n\t\t  \n\t\t});\n\t\t\n\t}\n\n});","// Une collection est un groupe d'instances de modèles\nvar app = app || {};\n\napp.AnimalsCollection = Backbone.Collection.extend({\n\n  url: 'PolygonalAnimalsApi.com/public/polygonalanimals',\n  model:app.singleAnimal\n\n});\n","// Une collection est un groupe d'instances de modèles\nvar app = app || {};\n\napp.CreatorsCollection = Backbone.Collection.extend({\n\n  model: app.singleCreator\n\n});\n","//console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\n/*var wolf = new app.singleAnimal({\n  name: \"Polygon Wolf\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/wolf.svg\",\n  link: \"wolf\"\n});\n\nvar owl = new app.singleAnimal({\n  name: \"Polygon Owl\",\n  price: 29.95,\n  color: \"orange\",\n  img: \"images/owl.svg\",\n  link: \"owl\"\n});\n\nvar panda = new app.singleAnimal({\n  name: \"Polygon Panda\",\n  price: 19.95,\n  img: \"images/panda.svg\",\n  link: \"panda\"\n});*/\n\n//$(\"#allFlowers\").html(animalGroupView.render().el);\n\n//$(\"#allCreators\").html(creatorGroupView.render().el);\n\n/*\nvar hello = new creatorsView({\n      el: $('#creatorsTemplate').first(),\n      model: creatorsModel\n    });*/\n\n//Création d'une nouvelle instance de router \n//nommée flowerRouter\nvar animalRouter = new app.Router();\n\n$(\".form-container\").hide();\nBackbone.history.start();\n\n\n/*flowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());*/\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}