{"version":3,"sources":["routes/router.js","models/singleFlowerModel.js","views/allFlowerView.js","views/singleFLowerView.js","collections/allFlower.js","zz-main/main.js"],"names":["console","log","app","singleFlower","Backbone","Model","extend","defaults","color","img","initialize","this","get","on","FlowersCollection","Collection","model","$","redRoses","name","price","link","rainbowRoses","heirloomRoses","flowerGroup","add","remove","toJSON"],"mappings":"AAAAA,QAAAC,IAAA,UCAAD,QAAAC,IAAA,oBAKA,IAAAC,KAAAA,OAGAA,KAAAC,aAAAC,SAAAC,MAAAC,QAGAC,UACAC,MAAA,OACAC,IAAA,0BAGAC,WAAA,WACAV,QAAAC,IAAA,0BAAAU,KAAAC,IAAA,QAAA,kCAAAD,KAAAC,IAAA,UAKAD,KAAAE,GAAA,SAAA,WACAb,QAAAC,IAAA,wCAMAU,KAAAE,GAAA,eAAA,WACAb,QAAAC,IAAA,qBAAAU,KAAAC,IAAA,QAAA,2BAAAD,KAAAC,IAAA,SAAA,iBC9BAZ,QAAAC,IAAA,iBCAAD,QAAAC,IAAA,oBCAAD,QAAAC,IAAA,YAMA,IAAAC,KAAAA,OAEAA,KAAAY,kBAAAV,SAAAW,WAAAT,QAEAU,MAAAd,IAAAC,eCVAH,QAAAC,IAAA,QACAgB,EAAA,MAOA,IAAAC,UAAA,GAAAhB,KAAAC,cACAgB,KAAA,YACAC,MAAA,MACAZ,MAAA,MACAC,IAAA,sBACAY,KAAA,YAGAC,aAAA,GAAApB,KAAAC,cACAgB,KAAA,gBACAC,MAAA,MACAZ,MAAA,SACAa,KAAA,gBAGAE,cAAA,GAAArB,KAAAC,cACAgB,KAAA,iBACAC,MAAA,MACAX,IAAA,2BACAY,KAAA,iBAGAG,YAAA,GAAAtB,KAAAY,mBACAI,SAAAI,cAGAE,aAAAC,IAAAF,eACAC,YAAAE,OAAAR,UAEAlB,QAAAC,IAAAuB,YAAAG","file":"scripts.min.js","sourcesContent":["console.log(\"routes\");","console.log(\"singleFlowerModel\");\n\n\n// Namespace our app\n// || veut dire \"OR\"\nvar app = app || {};\n\n//Création d'une variable\napp.singleFlower = Backbone.Model.extend({\n\n//Chaque instance de modèles auront leurs propres propriétés\n  defaults: {\n    color: \"pink\",\n    img: \"images/placeholder.jpg\"\n  },\n\n  initialize: function() {\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\n  \n    // Cut and paste this inside our initialize method\n    //Cela permet d'écouter les changements du modèle ?\n    // Modèle : les fleurs\n    this.on('change', function(){\n      console.log(\"Something in our model has changed\");\n    });\n\n    // Cut and paste this inside our initialize method\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\n    // La fonction sera appelée à chaque fois que le modèle est modifié\n    this.on('change:price', function(){\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\n    });\n\n  }\n\n});\n\n","console.log(\"allFlowerView\");","console.log(\"singleFlowerView\");","console.log(\"allFlower\");\n\n// Une collection est un groupe d'instances de modèles\n\n   \n// Namespace our flowerApp\nvar app = app || {};\n\napp.FlowersCollection = Backbone.Collection.extend({\n\n  model: app.singleFlower\n\n});\n","console.log(\"main\");\n$(\"#kk\");\n\n// 3 instances de fleurs sont crées \n// Toutes les instances de cet objet \n// vont avoir des propriétés spécifiques\n// sauf par exemple rose arc - en - ciel qui aura li'mage\n\nvar redRoses = new app.singleFlower({\n  name: \"Red Roses\",\n  price: 39.95,\n  color: \"Red\",\n  img: \"images/redRoses.jpg\",\n  link: \"redRose\"\n});\n\nvar rainbowRoses = new app.singleFlower({\n  name: \"Rainbow Roses\",\n  price: 29.95,\n  color: \"orange\",\n  link: \"rainbowRose\"\n});\n\nvar heirloomRoses = new app.singleFlower({\n  name: \"Heirloom roses\",\n  price: 19.95,\n  img: \"images/heirloomRoses.jpg\",\n  link: \"heirloomRose\"\n});\n\nvar flowerGroup = new app.FlowersCollection([\n  redRoses, rainbowRoses\n]);\n\nflowerGroup.add(heirloomRoses);\nflowerGroup.remove(redRoses);\n\nconsole.log(flowerGroup.toJSON());\n\n\n/* console.log(heirloomRoses.toJSON());\nconsole.log(rainbowRoses.toJSON());\nconsole.log(redRoses.toJSON()); */\n\n\n   // Change the price\n   // Le modèle est modifié (son prix)\n   // rainbowRoses.set('price', 20);\n"],"sourceRoot":"/source/"}