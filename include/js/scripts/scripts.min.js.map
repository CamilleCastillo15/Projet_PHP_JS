{"version":3,"sources":["aa-models/singleAnimalModel.js","aa-models/singleCreatorModel.js","bb-views/allAnimalsView.js","bb-views/allCreatorsView.js","bb-views/singleAnimalView.js","bb-views/singleCreatorView.js","xx-collections/allAnimals.js","xx-collections/allCreators.js","yy-routes/router.js","zz-main/main.js"],"names":["console","log","app","singleAnimal","Backbone","Model","extend","urlRoot","defaults","color","img","singleCreator","name","phone","allAnimalsView","View","tagName","render","this","collection","each","addAnimal","animal","animalView","singleAnimalView","model","$el","append","el","allCreatorsView","addCreator","creator","creatorView","singleCreatorView","className","template","_","$","html","animalTemplate","toJSON","events","mouseover","mouseout","addBgColor","addClass","removeBgColor","removeClass","creatorTemplate","attributes","AnimalsCollection","Collection","CreatorsCollection","Router","routes","","wolf","owl","panda","creators","animals","noCopy","wolfMessage","owlMessage","pandaMessage","creatorPage","fetch","creatorGroup","creatorGroupView","empty","animalPage","animalGroup","animalGroupView","price","link","animalRouter","history","start"],"mappings":"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","file":"scripts.min.js","sourcesContent":["console.log(\"singleAnimalModel\");\r\n\r\n\r\n// Namespace our app\r\n// || veut dire \"OR\"\r\nvar app = app || {};\r\n\r\n//Création d'une variable\r\napp.singleAnimal = Backbone.Model.extend({\r\n\r\nurlRoot: 'http://localhost/dev/PolygonalAnimalsApi_2/public/polygonalanimals',\r\n//Chaque instance de modèles auront leurs propres propriétés\r\n  defaults: {\r\n    color: \"pink\",\r\n    img: \"images/placeholder.jpg\"\r\n  }\r\n\r\n  /*\r\n  initialize: function() {\r\n    console.log(\"A model instance named \" + this.get(\"name\") +  \" has been created and it costs \" + this.get(\"price\"));\r\n  \r\n    // Cut and paste this inside our initialize method\r\n    //Cela permet d'écouter les changements du modèle ?\r\n    // Modèle : les fleurs\r\n    this.on('change', function(){\r\n      console.log(\"Something in our model has changed\");\r\n    });\r\n\r\n    // Cut and paste this inside our initialize method\r\n    //Création d'une fonction, qui, à chaque fois que le prix change, va, va afficher le nom de l'instance du modèle, et le prix modifié\r\n    // La fonction sera appelée à chaque fois que le modèle est modifié\r\n    this.on('change:price', function(){\r\n      console.log(\"The price for the \" + this.get(\"name\") + \" model just changed to $\" + this.get(\"price\") + \" dollars\");\r\n    });\r\n\r\n  }*/\r\n\r\n});\r\n\r\n","console.log(\"singleCreator\");\r\n\r\n\r\n// Namespace our app\r\n// || veut dire \"OR\"\r\nvar app = app || {};\r\n\r\n//Création d'une variable\r\napp.singleCreator = Backbone.Model.extend({\r\n\r\n  urlRoot: 'http://localhost/dev/PolygonalAnimalsApi_2/public/creators',\r\n\t\t/*url: function() {\r\n\t\t\treturn this.urlRoot;\r\n\t\t},*/\r\n\t\tdefaults: {\r\n\t\t    \"name\":  \"defaults\",\r\n\t\t    \"phone\": \"defaults\"\r\n\t\t  }\r\n\r\n});\r\n\r\n","console.log(\"allAnimalsView\");\r\n\r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\n// The view for all the flowers\r\napp.allAnimalsView = Backbone.View.extend({\r\n\r\n  tagName: \"section\",\r\n\r\n  render: function() {\r\n      this.collection.each(this.addAnimal, this);\r\n        return this;\r\n  },\r\n\r\n addAnimal: function(animal) {\r\n        var animalView = new app.singleAnimalView ({ model: animal });\r\n        this.$el.append(animalView.render().el);\r\n }\r\n\r\n});","console.log(\"allCreatorsView\");\r\n\r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\n// The view for all the flowers\r\napp.allCreatorsView = Backbone.View.extend({\r\n\r\n  tagName: \"section\",\r\n\r\n  render: function() {\r\n      this.collection.each(this.addCreator, this);\r\n        return this;\r\n  },\r\n\r\n addCreator: function(creator) {\r\n        var creatorView = new app.singleCreatorView ({ model: creator });\r\n        this.$el.append(creatorView.render().el);\r\n }\r\n\r\n});","console.log(\"singleAnimalView\");\r\n\r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\n// The view for a single model view, which is one flower\r\napp.singleAnimalView = Backbone.View.extend({\r\n\r\n//tagname définit le nom de la balise HTML dans lequelles les données vont être insérées\r\n//className définit la classe du tagName (optionnel)\r\n//tagName est aussi optionnel, mais Backbonne définira par défaut la balise div\r\n  tagName: \"article\",\r\n  className: \"flowerListItem\",\r\n\r\n  //Indique la balise html où seront insérées les données (avec JQuery - plus rapide-)\r\n  template: _.template( $(\"#flowerElement\").html() ),\r\n\r\n  //render construit les élémnts html\r\n  //Elle récupère les données crées précedemment\r\n  //$el ?\r\n  render: function() {\r\n    var animalTemplate = this.template(this.model.toJSON());\r\n    this.$el.html(animalTemplate);\r\n    return this;\r\n  },\r\n\r\n  //Evènements spécifiques à Backbone\r\n  events: {\r\n    'mouseover': 'addBgColor',\r\n    'mouseout': 'removeBgColor'\r\n  },\r\n\r\n  //Ajout au template, à la balise #allFlower est modifiée ?\r\n  //balise article (référence)\r\n  addBgColor: function() {\r\n    this.$el.addClass(\"bgColorImage\");\r\n  },\r\n\r\n  removeBgColor: function() {\r\n    this.$el.removeClass(\"bgColorImage\");\r\n  }\r\n\r\n});","console.log(\"singleCreatorView\");\r\n\r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\n// The view for all the flowers\r\napp.singleCreatorView = Backbone.View.extend({\r\n\r\n  tagName: \"article\",\r\n  className: \"flowerListItem\",\r\n\r\n  template: _.template( $(\"#creatorElement\").html() ),\r\n\r\n    /*initialize: function() {\r\n\t\t\tthis.template = _.template($('#creatorsTemplate').html());\r\n\t\t\tthis.listenTo(this.model, 'change', this.render);\r\n\t},*/\r\n\r\n  render: function(){\r\n\t\t\tvar creatorTemplate = this.$el.html(this.template(this.model.attributes));\r\n\t\t\tthis.$el.html(creatorTemplate);\r\n    \t\treturn this;\r\n\t},\r\n\r\n\r\n});","console.log(\"allAnimals\");\r\n\r\n// Une collection est un groupe d'instances de modèles\r\n\r\n   \r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\napp.AnimalsCollection = Backbone.Collection.extend({\r\n\r\n  model: app.singleAnimal\r\n\r\n});\r\n","console.log(\"allAnimals\");\r\n\r\n// Une collection est un groupe d'instances de modèles\r\n\r\n   \r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\napp.CreatorsCollection = Backbone.Collection.extend({\r\n\r\n  model: app.singleCreator\r\n\r\n});\r\n","console.log(\"router\");\r\n\r\n// Namespace our flowerApp\r\nvar app = app || {};\r\n\r\n//Création d'un routeur\r\n//Sur le modèle clé / valeur\r\n//La route est sur la gauche\r\napp.Router = Backbone.Router.extend({\r\n\r\n\troutes :{\r\n\t  //Définit une route pour index.html\r\n\t  //La méthode noCopy sera appelée\r\n\t  \"\": \"noCopy\",\r\n\t  //Les méthodes appelées pour :\r\n\t  //#heirloomRose, #rainbowRose, #redRose\r\n\t  \"wolf\" : \"wolfMessage\",\r\n\t  \"owl\": \"owlMessage\",\r\n\t  \"panda\" : \"pandaMessage\",\r\n\t  \"creators\" : \"creatorPage\",\r\n\t  \"animals\" : \"animalPage\"\r\n\t},\r\n\r\n\tnoCopy: function() {\r\n  \t  $(\"#copy\").html(\"\");\r\n\t},\r\n\r\n\twolfMessage: function() {\r\n\t  $(\"#copy\").html(\"Heirloom Roses are great Mother's Day flowers\");\r\n\t},\r\n\r\n\towlMessage: function() {\r\n\t  $(\"#copy\").html(\"Choose Rainbow Roses for your wedding\");\r\n\t},\r\n\r\n\tpandaMessage: function() {\r\n\t  $(\"#copy\").html(\"On Valentine's Day, give that special someone Red Roses\");\r\n\t},\r\n\r\n\tcreatorPage: function() {\r\n\r\n\tvar creator = new app.singleCreator();\r\n\tcreator.fetch();\r\n\r\n\tvar creatorGroup = new app.CreatorsCollection(creator);\r\n\t//creatorsGroup.fetch();\r\n\r\n\tvar creatorView = new app.singleCreatorView({ model: creator});\r\n\tvar creatorGroupView = new app.allCreatorsView({ collection: creatorGroup});\r\n\r\n\t  $(\"#allFlowers\").empty();\r\n\t  $(\"#allCreators\").html(creatorGroupView.render().el);\r\n\t},\r\n\r\n\tanimalPage: function() {\r\n\r\n\t  $(\"#allCreators\").empty();\r\n\r\n\t  var animal = new app.singleAnimal();\r\n\r\n\t  var animalGroup = new app.AnimalsCollection([\r\n\t\t  wolf, owl, panda\r\n\t\t]);\r\n\r\n\t  var animalGroupView = new app.allAnimalsView({ collection: animalGroup});\r\n\r\n\t  $(\"#allFlowers\").html(animalGroupView.render().el);\r\n\t}\r\n\r\n});","console.log(\"main\");\r\n$(\"#kk\");\r\n\r\n// 3 instances de fleurs sont crées \r\n// Toutes les instances de cet objet \r\n// vont avoir des propriétés spécifiques\r\n// sauf par exemple rose arc - en - ciel qui aura li'mage\r\n\r\nvar wolf = new app.singleAnimal({\r\n  name: \"Polygon Wolf\",\r\n  price: 39.95,\r\n  color: \"Red\",\r\n  img: \"images/wolf.svg\",\r\n  link: \"wolf\"\r\n});\r\n\r\nvar owl = new app.singleAnimal({\r\n  name: \"Polygon Owl\",\r\n  price: 29.95,\r\n  color: \"orange\",\r\n  img: \"images/owl.svg\",\r\n  link: \"owl\"\r\n});\r\n\r\nvar panda = new app.singleAnimal({\r\n  name: \"Polygon Panda\",\r\n  price: 19.95,\r\n  img: \"images/panda.svg\",\r\n  link: \"panda\"\r\n});\r\n\r\n//$(\"#allFlowers\").html(animalGroupView.render().el);\r\n\r\n//$(\"#allCreators\").html(creatorGroupView.render().el);\r\n\r\n/*\r\nvar hello = new creatorsView({\r\n      el: $('#creatorsTemplate').first(),\r\n      model: creatorsModel\r\n    });*/\r\n\r\n//Création d'une nouvelle instance de router \r\n//nommée flowerRouter\r\nvar animalRouter = new app.Router();\r\n\r\n//\r\nBackbone.history.start();\r\n\r\n\r\n/*flowerGroup.add(heirloomRoses);\r\nflowerGroup.remove(redRoses);\r\n\r\nconsole.log(flowerGroup.toJSON());*/\r\n\r\n\r\n/* console.log(heirloomRoses.toJSON());\r\nconsole.log(rainbowRoses.toJSON());\r\nconsole.log(redRoses.toJSON()); */\r\n\r\n\r\n   // Change the price\r\n   // Le modèle est modifié (son prix)\r\n   // rainbowRoses.set('price', 20);\r\n"],"sourceRoot":"/source/"}